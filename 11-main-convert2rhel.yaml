---
- name: Convert2rhel setup for offfline migration
  hosts: localhost
  become: false
  gather_facts: true
  vars:
    - centos_repos_path: /etc/yum.repos.d/

  tasks:
    - name: Set current play timestamp variable
      ansible.builtin.set_fact:
        fact_current_timestamp: "{{ ansible_date_time.iso8601_basic_short }}"

    - name: Display the timestamp
      ansible.builtin.debug:
        msg: "Current timestamp is {{ fact_current_timestamp }}"

    - name: Check if the OS is CentOS 7
      block:
        - name: Determine if OS is CentOS 7
          ansible.builtin.set_fact:
            is_centos_7: "{{ ansible_facts['distribution'] == 'CentOS' and ansible_facts['distribution_major_version'] == '7' }}"

        - name: Fail if the OS is not CentOS 7
          ansible.builtin.fail:
            msg: "This playbook requires CentOS 7. The current OS is {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_major_version'] }}."
          when: not is_centos_7

      rescue:
        - name: Notify user that playbook will end
          ansible.builtin.debug:
            msg: "Playbook execution halted because the OS is not CentOS 7."

        - name: End play if OS is not CentOS 7
          ansible.builtin.meta: end_play

    - name: Continue play
      ansible.builtin.debug:
        msg: "After block"

    - name: Backup and compress /etc/yum.repos.d directory
      block:
        - name: Set current play backup path variable
          ansible.builtin.set_fact:
            fact_centos_repos_backup_path: "/tmp/centos_repos_backup_{{ fact_current_timestamp }}"

        - name: Create a backup directory
          ansible.builtin.file:
            path: fact_centos_repos_backup_path
            state: directory
            mode: '0755'

        - name: Create a tar.gz archive of YUM repo files
          ansible.builtin.command:
            cmd: tar -zcvf {{ fact_centos_repos_backup_path }}.tar.gz /etc/yum.repos.d/

        - name: Confirm backup was created
          ansible.builtin.stat:
            path: "{{ fact_centos_repos_backup_path }}.tar.gz"
          register: reg_backup_status

        - name: Print status of backup
          ansible.builtin.debug:
            msg: "Backup file created at {{ fact_centos_repos_backup_path }}.tar.gz"
          when: reg_backup_status.stat.exists
      rescue:
        - name: Print error message if block fails
          ansible.builtin.debug:
            msg: "An error occurred while backing up and compressing /etc/yum.repos.d/"
